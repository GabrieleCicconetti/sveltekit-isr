export const config = {
	isr: {
		// Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
		// Setting the value to `false` means it will never expire.
		expiration: false,

		// Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
		// with a __prerender_bypass=<token> cookie.
		//
		// Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
		bypassToken: 'vOINkES15fLSseVSSERu',

		// List of valid query parameters. Other parameters (such as utm tracking codes) will be ignored,
		// ensuring that they do not result in content being regenerated unnecessarily
		allowQuery: []
	}
};

/**
 * @type {{name: {first: string, last: string}}}
 */
export async function load() {
	const res = await fetch('https://randomuser.me/api');
	const data = await res.json();
	console.log(data);
	return data.results[0];
}
